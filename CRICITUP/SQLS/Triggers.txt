CREATE OR REPLACE TRIGGER UPDATE_STAT_ON_INSERTING_PLAYER
AFTER INSERT ON Player
FOR EACH ROW
DECLARE
    ID NUMBER;
BEGIN
    ID := :NEW.playerid;

   INSERT INTO FIELDING_STAT(STATID,PLAYERID)
	 VALUES(ID,ID);
	  INSERT INTO BATTING_STAT(STATID,PLAYERID)
	 VALUES(ID,ID);
	  INSERT INTO BOWLING_STAT(STATID,PLAYERID)
	 VALUES(ID,ID);

EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END;
/




CREATE OR REPLACE TRIGGER BATTING_STAT_ON_INSERTING_SCORECARD 
AFTER INSERT ON SCORECARD 
FOR EACH ROW
DECLARE

    RUN_SCORED NUMBER;
    ID NUMBER;
    BALL_FACED NUMBER;
    SIXES NUMBER;
    FOURS NUMBER;
    PREVIOUS_RUN NUMBER;
    PREV_AVERAGE NUMBER;
    NEW_AVERAGE NUMBER;
    PREVIOUS_MATCHES NUMBER;
    NEW_MATCHES NUMBER;
    FIF NUMBER ;
    HUND NUMBER ;
		BALL NUMBER;
		STR NUMBER;
		TTLBALL NUMBER;
BEGIN
    RUN_SCORED := :NEW.TOTAL_RUNS;
    ID := :NEW.PLAYER_ID;
    BALL_FACED := :NEW.TOTAL_BALLS_FACED;
    SIXES := :NEW.TOTAL_SIXES_HIT;
    FOURS := :NEW.TOTAL_FOURS_HIT;

    SELECT TOTAL_RUN, AVG,TOTALBALL INTO PREVIOUS_RUN, PREV_AVERAGE,TTLBALL FROM BATTING_STAT 
    WHERE PLAYERID = ID;

    PREVIOUS_MATCHES := NVL(PREVIOUS_RUN, 0) / NVL(PREV_AVERAGE, 1);
    NEW_MATCHES := NVL(PREVIOUS_MATCHES, 0) + 1;
    PREVIOUS_RUN := NVL(PREVIOUS_RUN, 0) + NVL(RUN_SCORED,0);
    NEW_AVERAGE := PREVIOUS_RUN / NEW_MATCHES;
		BALL:=  NVL(TTLBALL, 0)+NVL(BALL_FACED,0);
		BALL:=NVL(BALL,1);
		STR:=(PREVIOUS_RUN/BALL)*100;

    IF NVL(RUN_SCORED,0) >= 50 AND NVL(RUN_SCORED,0) < 100 THEN 
        FIF := 1;
    ELSIF NVL(RUN_SCORED,0) >= 100 THEN 
        HUND := 1;
    END IF;

    UPDATE BATTING_STAT
    SET TOTAL_RUN = NVL(TOTAL_RUN, 0) + RUN_SCORED,
        TOTALSIX = NVL(TOTALSIX, 0) + SIXES,
        TOTALFOURS = NVL(TOTALFOURS, 0) + FOURS,
         STR_Rate = STR,
        AVG = NEW_AVERAGE,
        FIFTIES = NVL(FIFTIES, 0) + FIF,
        HUNDREDS = NVL(HUNDREDS, 0) + HUND
    WHERE PLAYERID = ID;



END ;
/






CREATE OR REPLACE TRIGGER BOWLING_STAT_ON_INSERTING_SCORECARD 
AFTER INSERT ON SCORECARD 
FOR EACH ROW
DECLARE
ID NUMBER;
OVER NUMBER;
WICKETS NUMBER;
GIVENRUNS NUMBER;
MAIDENS NUMBER;
FIVEWICKETS NUMBER:=0;
PREVAVG NUMBER;
PREVSR NUMBER;
NEWAVG NUMBER;
NEWSR NUMBER;
WKT NUMBER;
BALL NUMBER;
PREVRUN NUMBER;
NEWRUN NUMBER;
PREVOVER NUMBER;
BEGIN
	OVER:= :NEW.OVERS_BOWLED;
	WICKETS:= :NEW.TAKEN_WICKETS;
	GIVENRUNS:= :NEW.GIVEN_TOTAL_RUNS;
	ID:=:NEW.PLAYER_ID;
	
	SELECT BOWLING_AVG,BOWLING_STRIKE_RATE,WICKETS,GIVENRUN,NO_OF_OVERS INTO PREVAVG,PREVSR,WKT,PREVRUN,PREVOVER FROM BOWLING_STAT
	WHERE PLAYERID=ID;
	
-- 	
	WKT:=NVL(WKT,0)+NVL(WICKETS,0);
	NEWRUN:=NVL(GIVENRUNS,0)+NVL(PREVRUN,0);
	NEWAVG:=NEWRUN/NVL(WKT,1);
	OVER:=NVL(OVER,0)+NVL(PREVOVER,0);
	BALL:=OVER*6;
	NEWSR:=(BALL/NVL(OVER,1))*6;
	
	IF WICKETS >=5 THEN FIVEWICKETS:=1;
	ELSE FIVEWICKETS:=0;
	END IF;
	
	UPDATE BOWLING_STAT 
	SET WICKETS=WKT,
	FIVE_WICKETS=NVL(FIVE_WICKETS,0)+FIVEWICKETS,
	NO_OF_OVERS=OVER,
	BOWLING_AVG=NEWAVG,
	BOWLING_STRIKE_RATE=NEWSR,
	GIVENRUN=NEWRUN
	WHERE PLAYERID=ID;
-- 	
	
		



END ;
/



CREATE OR REPLACE TRIGGER FIELDING_STAT_ON_INSERTING_SCORECARD 
AFTER INSERT ON SCORECARD 
FOR EACH ROW
DECLARE
CATCH NUMBER;
PREV NUMBER;
ID NUMBER;
BEGIN
 	CATCH:=:NEW.TOTAL_CATCHES_TAKEN;
	ID:=:NEW.PLAYER_ID;
-- 	
	SELECT TOTAL_CATCH INTO PREV FROM FIELDING_STAT 
	WHERE PLAYERID=ID;
	
	CATCH:= NVL(CATCH,0)+NVL(PREV,0);
	
	UPDATE FIELDING_STAT 
	SET TOTAL_CATCH=CATCH 
	WHERE PLAYERID =ID;
		
-- 


END ;
/






CREATE OR REPLACE TRIGGER INVALID_NAME
BEFORE INSERT ON PERSON
FOR EACH ROW
DECLARE
    first_name VARCHAR2(100);
		last_name VARCHAR2(100);
BEGIN
    first_name := :NEW.FIRST_NAME;
		last_name:= :NEW.LAST_NAME;
    
    -- Check if the name contains only alphabetic characters
    IF REGEXP_LIKE(first_name, '^[A-Za-z ]+$') AND REGEXP_LIKE(last_name, '^[A-Za-z ]+$') THEN
        NULL; -- Name is valid, do nothing
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'Invalid  name. Name should contain only alphabetic characters.');
    END IF;
END;
/