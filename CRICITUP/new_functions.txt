CREATE OR REPLACE PROCEDURE winner_update IS 

run1 NUMBER := 0;
run2 NUMBER := 0;
winners NUMBER;
loosers NUMBER;

BEGIN
  FOR M IN (SELECT MATCH_ID, TEAM1_ID, TEAM2_ID FROM MATCH)
  LOOP
    -- Calculate run1 and run2
    SELECT SUM(TOTAL_RUNS) INTO run1 FROM SCORECARD WHERE MATCH_ID = M.MATCH_ID
      AND PLAYER_ID IN (SELECT PLAYERID FROM PLAYER WHERE TEAM_ID = M.TEAM1_ID);

    SELECT SUM(TOTAL_RUNS) INTO run2 FROM SCORECARD WHERE MATCH_ID = M.MATCH_ID
      AND PLAYER_ID IN (SELECT PLAYERID FROM PLAYER WHERE TEAM_ID = M.TEAM2_ID);

    -- Check if run1 and run2 are not NULL
    IF run1 IS NOT NULL AND run2 IS NOT NULL THEN
      IF run1 > run2 THEN 
        winners := M.TEAM1_ID;
        loosers := M.TEAM2_ID;
      ELSE 
        winners := M.TEAM2_ID;
        loosers := M.TEAM1_ID;
      END IF;

      -- Update MATCH table
			DBMS_OUTPUT.PUT_LINE('Winner: ' || winners);

      UPDATE MATCH
      SET WINNER = winners
      WHERE MATCH_ID = M.MATCH_ID;

    END IF;
  END LOOP;
END;


CREATE OR REPLACE FUNCTION FIND_SERIES_WINNER(sid NUMBER) RETURN NUMBER 
IS 
team1 NUMBER;
team2 NUMBER ;
team1win NUMBER;
team2win NUMBER;
winner NUMBER;
BEGIN
SELECT TEAM1_ID,TEAM2_ID INTO team1,team2 FROM MATCH 
WHERE SERIES_ID=sid;

SELECT count(*) INTO team1win 
FROM series s join match m
on s.SERIES_ID=m.SERIES_ID
AND m.TEAM1_ID=m.WINNER
AND m.SERIES_ID=sid;


SELECT count(*) INTO team2win 
FROM series s join match m
on s.SERIES_ID=m.SERIES_ID
AND m.TEAM2_ID=m.WINNER
AND m.SERIES_ID=sid;

IF team1win>=team2win THEN
winner:=team1;
ELSE 
winner:=team2; 
END IF;

RETURN winner;

END;
/




ALTER TABLE MATCH 
ADD SIX NUMBER;


ALTER TABLE MATCH 
ADD FOUR NUMBER;


ALTER TABLE SERIES 
ADD SIX NUMBER ;
ALTER TABLE SERIES 
ADD FOUR NUMBER;



ALTER TABLE SERIES
ADD HIGHEST_WICKET_TAKER NUMBER;
ALTER TABLE SERIES
ADD HIGHEST_RUN_SCORER NUMBER;


ALTER TABLE SERIES 
ADD HIGHESTRUN NUMBER;
ALTER TABLE SERIES
ADD HIGHESTWICKET NUMBER;



CREATE OR REPLACE PROCEDURE HIGHEST_WICKET_IN_SERIES IS
playerid NUMBER;
wicket NUMBER;
BEGIN
for R IN  (SELECT SERIES_ID FROM series)
LOOP
SELECT PLAYER_ID, SUM(TAKEN_WICKETS) INTO playerid , wicket   FROM SCORECARD S JOIN MATCH M 
ON  S.MATCH_ID=M.MATCH_ID
WHERE M.SERIES_ID=R.SERIES_ID
GROUP BY PLAYER_ID
HAVING SUM(TAKEN_WICKETS) >= ALL
(
SELECT SUM(TAKEN_WICKETS)  FROM SCORECARD S JOIN MATCH M 
ON  S.MATCH_ID=M.MATCH_ID
WHERE M.SERIES_ID=R.SERIES_ID
GROUP BY PLAYER_ID
)
FETCH FIRST 1 ROW ONLY;

UPDATE SERIES
SET HIGHEST_WICKET_TAKER=playerid,
HIGHESTWICKET=wicket
WHERE SERIES_ID=R.SERIES_ID;


END LOOP;
END;
/




CREATE OR REPLACE PROCEDURE HIGHEST_RUN_IN_SERIES 
id NUMBER;
BEGIN
for R IN  (SELECT SERIES_ID FROM series)
LOOP


SELECT SUM(TOTAL_SIXES_HIT) INTO sixs FROM SCORECARD S JOIN MATCH M 
ON  S.MATCH_ID=M.MATCH_ID
WHERE M.SERIES_ID=R.SERIES_ID;

UPDATE SERIES 
SET SIX=sixs,
FOUR=fours 
WHERE SERIES_ID=R.SERIES_ID;

END LOOP;
END;
/




CREATE OR REPLACE PROCEDURE MAN_OF_THE_SERIES IS 
run NUMBER;
matches NUMBER;
wicket NUMBER;
runratio NUMBER;
wicketratio NUMBER;
mots NUMBER;
BEGIN
for R IN  (SELECT SERIES_ID,HIGHEST_RUN_SCORER,HIGHEST_WICKET_TAKER FROM series)
LOOP
SELECT HIGHESTRUN,HIGHESTWICKET INTO run,wicket FROM SERIES
WHERE SERIES_ID=R.SERIES_ID;
SELECT COUNT(*) into matches FROM MATCH WHERE SERIES_ID=R.SERIES_ID;
runratio:=run/matches;
wicketratio:=wicket/matches;
runratio:=runratio/100;
wicketratio:=wicketratio/4;
IF runratio>=wicketratio THEN
mots:=R.HIGHEST_RUN_SCORER;
ELSE 
mots:=
R.HIGHEST_WICKET_TAKER;
END IF;
UPDATE SERIES S 
SET MAN_OF_THE_SERIES=mots
WHERE S.SERIES_ID=R.SERIES_ID;
END LOOP;
END;


CREATE OR REPLACE PROCEDURE SERIES_FOUR_SIX_UPDATE IS 
sixs NUMBER;
fours NUMBER;
BEGIN
for R IN  (SELECT SERIES_ID FROM series)
LOOP

SELECT SUM(TOTAL_FOURS_HIT) into fours FROM SCORECARD S JOIN MATCH M 
ON  S.MATCH_ID=M.MATCH_ID
WHERE M.SERIES_ID=R.SERIES_ID;

SELECT SUM(TOTAL_SIXES_HIT) INTO sixs FROM SCORECARD S JOIN MATCH M 
ON  S.MATCH_ID=M.MATCH_ID
WHERE M.SERIES_ID=R.SERIES_ID;

UPDATE SERIES 
SET SIX=sixs,
FOUR=fours 
WHERE SERIES_ID=R.SERIES_ID;

END LOOP;
END;